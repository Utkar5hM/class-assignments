


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AllocSpace, DATA,NOINIT,READWRI
TE
    2 00000000         ;Space for storing reversed string
    3 00000000         str_rev SPACE            1024        ;
    4 00000400         ;Actual Code
    5 00000400                 AREA             hmm, CODE, READWRITE
    6 00000000                 EXPORT           Reset_Handler
    7 00000000         Reset_Handler
    8 00000000         ;Pointer to the input string
    9 00000000 E59F1084        LDR              R1, =str_src ;
   10 00000004         ;Pointer to the reversed string
   11 00000004 E59F2084        LDR              R2, =str_rev ;
   12 00000008         ;storing the input's pointer in R8
   13 00000008 E2818000        ADD              R8, R1, #0  ;
   14 0000000C         ;Storing the result's pointer in R9
   15 0000000C E2829000        ADD              R9, R2, #0  ;
   16 00000010         ; load a byte from input string and update the pointer
   17 00000010 E4D83001 
                       lth     LDRB             R3, [R8],#1 ;
   18 00000014         ; counting length (total = length +1)
   19 00000014 E2844001        ADD              R4, #1      ;
   20 00000018         ; Check for End of string
   21 00000018 E3530000        CMP              R3, #0      ; 
   22 0000001C         ; If not go back to lth to count length
   23 0000001C 1AFFFFFB        BNE              lth         ;
   24 00000020         ; total = (length +1) - 1
   25 00000020 E2444001        SUB              R4, #1      ;
   26 00000024         ;storing length in R5
   27 00000024 E2845000        ADD              R5, R4, #0  ;
   28 00000028         ; R8 to point to the last value just before the 0 (NULL)
                       .
   29 00000028 E2488002        SUB              R8, #2      ;
   30 0000002C         ; for iteration count R5 = R5 -1;
   31 0000002C E2455001 
                       res     SUB              R5, #1      ;
   32 00000030         ; Loading the value in reverse order in R3
   33 00000030 E4583001        LDRB             R3, [R8],#-1 ; load a byte and 
                                                            update the pointer
   34 00000034         ; Storing the loaded value;
   35 00000034 E4C93001        STRB             R3, [R9],#1 ; store byte and up
                                                            date the pointer
   36 00000038         ; checking if R5 is 0. which indicated we are done rever
                       sing.
   37 00000038 E3550000        CMP              R5, #0      ; Check for End of 
                                                            string
   38 0000003C         ; If its not then loop again.
   39 0000003C 1AFFFFFA        BNE              res
   40 00000040         ; storing null in R3
   41 00000040 E3A03000        MOV              R3, #0      ;
   42 00000044         ; adding NULL at the end of the reversed string
   43 00000044 E5C93000        STRB             R3, [R9]    ;
   44 00000048         ;Restoring length in R5
   45 00000048 E2845000        ADD              R5, R4, #0  ;
   46 0000004C         ;storing starting addresses of input & reversed string.
   47 0000004C E2818000        ADD              R8, R1, #0  ;
   48 00000050 E2829000        ADD              R9, R2, #0  ;
   49 00000054         ;checking if the input string is palindrome
   50 00000054         ; by comparing same index bits of input and reversed str
                       ing.



ARM Macro Assembler    Page 2 


   51 00000054 E4D83001 
                       pal     LDRB             R3, [R8],#1 ; 
   52 00000058 E4D94001        LDRB             R4, [R9],#1 ; 
   53 0000005C         ; checking for end of string
   54 0000005C E3530000        CMP              R3, #0      ;
   55 00000060         ; As once it reaches end means it's a palindome.
   56 00000060 0A000003        BEQ              ipa         ;
   57 00000064         ;comparing bytes.
   58 00000064 E1530004        CMP              R3, R4      ;
   59 00000068         ; if equal -> it can be a palindrome hence looping for n
                       ext index
   60 00000068 0AFFFFF9        BEQ              pal         ;
   61 0000006C         ; If not equan then its not a palindrome
   62 0000006C         ;storing 0 in R0 (output register)
   63 0000006C E3A00000 
                       np      MOV              R0, #0      ;
   64 00000070         ; jump to stop;
   65 00000070 EA000001        BAL              stop        ;
   66 00000074         ;storing 1 in R0 (output register) if input is a palindr
                       ome
   67 00000074 E3A00001 
                       ipa     MOV              R0, #1      ;
   68 00000078 EAFFFFFF        BAL              stop        ;
   69 0000007C EAFFFFFE 
                       stop    BAL              stop
   70 00000080         ; input_string 
   71 00000080 72 65 76 
              69 76 65 
              72 00    str_src DCB              "reviver",0 ;
   72 00000088 E1A00000        NOP
   73 0000008C                 END
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\a.d -o.\a.o -IC:\Keil\
ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --list=.\a
.lst a.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AllocSpace 00000000

Symbol: AllocSpace
   Definitions
      At line 1 in file a.s
   Uses
      None
Comment: AllocSpace unused
str_rev 00000000

Symbol: str_rev
   Definitions
      At line 3 in file a.s
   Uses
      At line 11 in file a.s
Comment: str_rev used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 7 in file a.s
   Uses
      At line 6 in file a.s
Comment: Reset_Handler used once
hmm 00000000

Symbol: hmm
   Definitions
      At line 5 in file a.s
   Uses
      None
Comment: hmm unused
ipa 00000074

Symbol: ipa
   Definitions
      At line 67 in file a.s
   Uses
      At line 56 in file a.s
Comment: ipa used once
lth 00000010

Symbol: lth
   Definitions
      At line 17 in file a.s
   Uses
      At line 23 in file a.s
Comment: lth used once
np 0000006C

Symbol: np
   Definitions
      At line 63 in file a.s
   Uses
      None
Comment: np unused
pal 00000054

Symbol: pal
   Definitions
      At line 51 in file a.s
   Uses
      At line 60 in file a.s
Comment: pal used once
res 0000002C

Symbol: res
   Definitions
      At line 31 in file a.s
   Uses
      At line 39 in file a.s
Comment: res used once
stop 0000007C

Symbol: stop



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 69 in file a.s
   Uses
      At line 65 in file a.s
      At line 68 in file a.s
      At line 69 in file a.s

str_src 00000080

Symbol: str_src
   Definitions
      At line 71 in file a.s
   Uses
      At line 9 in file a.s
Comment: str_src used once
9 symbols
344 symbols in table
