


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             hmm, CODE, READWRITE
    2 00000000                 EXPORT           Reset_Handler
    3 00000000         Reset_Handler
    4 00000000         ; Pointer to the input string
    5 00000000 E59F1078        LDR              R1, =str_src ;
    6 00000004         ; Pointer to the input substring
    7 00000004 E59F2078        LDR              R2, =sub_str ; 
    8 00000008         ;storing the input string's pointer in R8
    9 00000008 E2818000        ADD              R8, R1, #0  ;
   10 0000000C         ;storing the input substring's pointer in R9
   11 0000000C E2829000        ADD              R9, R2, #0  ;
   12 00000010         ; Loading the first byte(char) of the substring
   13 00000010 E4D94001        LDRB             R4, [R9],#1 ; 
   14 00000014         ; for storing the index.
   15 00000014 E3A05000        MOV              R5, #0      ;
   16 00000018         ;loading the chars of input string.
   17 00000018 E4D83001 
                       ind     LDRB             R3, [R8],#1 ; 
   18 0000001C         ; incrementing the index.
   19 0000001C E2855001        ADD              R5, #1      ;
   20 00000020         ; Check for End of string
   21 00000020 E3530000        CMP              R3, #0      ; Check for End of 
                                                            string
   22 00000024         ; if it reaches the end of string -> not found
   23 00000024 0A00000B        BEQ              nf          ;
   24 00000028         ;comparing 1st char of substring and i'th char of string
                       
   25 00000028 E1530004        CMP              R3, R4      ;
   26 0000002C         ;back to iteration if not equal.
   27 0000002C 1AFFFFF9        BNE              ind         ;
   28 00000030         ; else
   29 00000030         ; storing index in R10 for inner loop.
   30 00000030 E288A000        ADD              R10, R8, #0 ;
   31 00000034         ; comparing subsequent characters
   32 00000034 E4DA3001 
                       ver     LDRB             R3, [R10],#1 ; load a byte and 
                                                            update the pointer
   33 00000038 E4D94001        LDRB             R4, [R9],#1 ; load a byte and u
                                                            pdate the pointer
   34 0000003C E3540000        CMP              R4, #0      ; Check for End of 
                                                            sub string
   35 00000040         ; if entire substring satisfies, we return.
   36 00000040 0A000006        BEQ              iss         ;
   37 00000044         ;Check if char's are equal
   38 00000044 E1530004        CMP              R3, R4      ; 
   39 00000048         ;If not equal, point R9 to start of string and reload R4
                       
   40 00000048 12829000        ADDNE            R9, R2, #0  ;
   41 0000004C 14D94001        LDRBNE           R4, [R9],#1 ; 
   42 00000050         ;back to main iteration if not equal.
   43 00000050 1AFFFFF0        BNE              ind         ;
   44 00000054         ; if current chars are equal loop further.
   45 00000054 0AFFFFF6        BEQ              ver
   46 00000058         ;storing -1 if substring not found.
   47 00000058 E3E00000 
                       nf      MOV              R0, #-1     ;
   48 0000005C EA000001        BAL              stop        ;
   49 00000060         ; storing index of substring in R0 if substring found.
   50 00000060 E2450001 



ARM Macro Assembler    Page 2 


                       iss     ADD              R0, R5, #-1 ;
   51 00000064 EAFFFFFF        BAL              stop        ;
   52 00000068 EAFFFFFE 
                       stop    BAL              stop
   53 0000006C         ; input string
   54 0000006C 72 65 76 
              69 76 65 
              72 00    str_src DCB              "reviver",0 ;
   55 00000074         ; input substring
   56 00000074 76 69 76 
              65 00    sub_str DCB              "vive",0    ;
   57 00000079 00 00 00 
              E1A00000         NOP
   58 00000080                 END
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\b.d -o.\b.o -IC:\Keil\
ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --list=.\b
.lst b.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 3 in file b.s
   Uses
      At line 2 in file b.s
Comment: Reset_Handler used once
hmm 00000000

Symbol: hmm
   Definitions
      At line 1 in file b.s
   Uses
      None
Comment: hmm unused
ind 00000018

Symbol: ind
   Definitions
      At line 17 in file b.s
   Uses
      At line 27 in file b.s
      At line 43 in file b.s

iss 00000060

Symbol: iss
   Definitions
      At line 50 in file b.s
   Uses
      At line 36 in file b.s
Comment: iss used once
nf 00000058

Symbol: nf
   Definitions
      At line 47 in file b.s
   Uses
      At line 23 in file b.s
Comment: nf used once
stop 00000068

Symbol: stop
   Definitions
      At line 52 in file b.s
   Uses
      At line 48 in file b.s
      At line 51 in file b.s
      At line 52 in file b.s

str_src 0000006C

Symbol: str_src
   Definitions
      At line 54 in file b.s
   Uses
      At line 5 in file b.s
Comment: str_src used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

sub_str 00000074

Symbol: sub_str
   Definitions
      At line 56 in file b.s
   Uses
      At line 7 in file b.s
Comment: sub_str used once
ver 00000034

Symbol: ver
   Definitions
      At line 32 in file b.s
   Uses
      At line 45 in file b.s
Comment: ver used once
9 symbols
342 symbols in table
