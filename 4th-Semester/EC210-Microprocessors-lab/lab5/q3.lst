


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             AllocSpace, DATA,NOINIT,READWRI
TE
    2 00000000         ;Space for storing reversed string
    3 00000000         array   SPACE            1024        ;
    4 00000400         result  SPACE            1024        ;
    5 00000800         ;Actual Code
    6 00000800                 AREA             hmm, CODE, READWRITE
    7 00000000                 EXPORT           Reset_Handler
    8 00000000         Reset_Handler
    9 00000000         ;address to the input number
   10 00000000 E59F1094        LDR              R1, =inputnumber ;
   11 00000004         ;address for space used in operation
   12 00000004 E59F2094        LDR              R2, =array  ;
   13 00000008 E1A0C002        MOV              R12, R2     ;
   14 0000000C         ;address to the result
   15 0000000C E59F3090        LDR              R3, =result ;
   16 00000010         ; load the  input number from memory
   17 00000010 E5914000        LDR              R4, [R1]    ;
   18 00000014 E5D29000        LDRB             R9, [R2]    ;
   19 00000018         ; Getting the last bit
   20 00000018 E1A05004        MOV              R5, R4      ; R5 = R4
   21 0000001C E3A06000        MOV              R6, #0      ;
   22 00000020 E3A07000        MOV              R7, #0      ; for storing no of
                                                             nos.
   23 00000024         ;dividing and finding nth digit.
   24 00000024         ;division by the use of subtracting
   25 00000024         ; until a remainder is found.
   26 00000024         ; where remainder < 10
   27 00000024 E245500A 
                       div     SUB              R5, R5, #10 ; subtracting by 10
                                                            
   28 00000028 E355000A        CMP              R5, #10     ; checking if remai
                                                            nder < 10
   29 0000002C         ;incrementing iterator to store quotient
   30 0000002C E2866001        ADD              R6, R6, #1  ; 
   31 00000030         ; if remainder >=10 then loop to sub further.
   32 00000030 5AFFFFFB        BPL              div
   33 00000034 E2877001        ADD              R7, #1      ; incrementing nos.
                                                            
   34 00000038 E4C25001        STRB             R5, [R2], #1 ; storing digits
   35 0000003C         ;comparing quotient and 10.
   36 0000003C E356000A        CMP              R6, #10     ;
   37 00000040         ;if quotient >10 then store quotient in remainder
   38 00000040 51A05006        MOVPL            R5, R6      ;
   39 00000044         ; && reset quotient
   40 00000044 53A06000        MOVPL            R6, #0      ;
   41 00000048         ; && loop again
   42 00000048 5AFFFFF5        BPL              div         ;
   43 0000004C         ; check if quotient is zero
   44 0000004C E3560000        CMP              R6, #0      ;
   45 00000050         ; increment no of digits counter if no
   46 00000050 12877001        ADDNE            R7, #1      ;
   47 00000054         ; &&  store it in R2 if no.
   48 00000054 15C26000        STRBNE           R6, [R2]    ; storing last digi
                                                            t
   49 00000058         ; 
   50 00000058 E3A09000        MOV              R9, #0      ; i for  iteration
   51 0000005C E3A05000        MOV              R5, #0      ; for storing resul
                                                            t



ARM Macro Assembler    Page 2 


   52 00000060 E3A08001        MOV              R8, #1      ; for multiple of 1
                                                            0
   53 00000064 E3A04000        MOV              R4, #0      ; for storing digit
                                                            ;
   54 00000068 E3A06000        MOV              R6, #0      ;
   55 0000006C E3A0A00A        MOV              R10, #10    ;
   56 00000070         ;loading ith digit in R4
   57 00000070 E4524001 
                       mult    LDRB             R4, [R2], #-1 ;
   58 00000074         ; multiplying it with 10^i
   59 00000074 E0060894        MUL              R6, R4, R8  ;
   60 00000078         ; adding it to Result register
   61 00000078 E0855006        ADD              R5, R5, R6  ;
   62 0000007C         ;incrementing iterator
   63 0000007C E2899001        ADD              R9, #1      ;
   64 00000080         ; multiplying multiplying register with 10.
   65 00000080 E00D0A98        MUL              R13, R8, R10 ;
   66 00000084         ; storing it back into multiplkying register
   67 00000084 E1A0800D        MOV              R8, R13     ;
   68 00000088         ; checking if i< n  (n= no of digits)
   69 00000088 E1570009        CMP              R7, R9      ;
   70 0000008C         ; if yes then loop
   71 0000008C 5AFFFFF7        BPL              mult
   72 00000090         ;store final result in [R3] memory.
   73 00000090 E5835000        STR              R5, [R3]    ;
   74 00000094 EAFFFFFE 
                       stop    BAL              stop
   75 00000098         ; input_number
   76 00000098 00022CC6 
                       inputnumber
                               DCD              142534      ;
   77 0000009C                 END
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --apcs=interwork --depend=.\q3.d -o.\q3.o -IC:\Kei
l\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include --predefine="__EVAL SETA 1" --list=.
\q3.lst q3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

AllocSpace 00000000

Symbol: AllocSpace
   Definitions
      At line 1 in file q3.s
   Uses
      None
Comment: AllocSpace unused
array 00000000

Symbol: array
   Definitions
      At line 3 in file q3.s
   Uses
      At line 12 in file q3.s
Comment: array used once
result 00000400

Symbol: result
   Definitions
      At line 4 in file q3.s
   Uses
      At line 15 in file q3.s
Comment: result used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 8 in file q3.s
   Uses
      At line 7 in file q3.s
Comment: Reset_Handler used once
div 00000024

Symbol: div
   Definitions
      At line 27 in file q3.s
   Uses
      At line 32 in file q3.s
      At line 42 in file q3.s

hmm 00000000

Symbol: hmm
   Definitions
      At line 6 in file q3.s
   Uses
      None
Comment: hmm unused
inputnumber 00000098

Symbol: inputnumber
   Definitions
      At line 76 in file q3.s
   Uses
      At line 10 in file q3.s
Comment: inputnumber used once
mult 00000070

Symbol: mult
   Definitions
      At line 57 in file q3.s
   Uses
      At line 71 in file q3.s
Comment: mult used once
stop 00000094

Symbol: stop
   Definitions
      At line 74 in file q3.s
   Uses
      At line 74 in file q3.s
Comment: stop used once
6 symbols
342 symbols in table
